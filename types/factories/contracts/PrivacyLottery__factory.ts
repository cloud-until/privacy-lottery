/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PrivacyLottery,
  PrivacyLotteryInterface,
} from "../../contracts/PrivacyLottery";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "prizeDescription",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "LotteryCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "ParticipantEntered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "WinnerDrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_prizeDescription",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "createLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "drawWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "enterLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "getLotteryState",
    outputs: [
      {
        internalType: "enum PrivacyLottery.LotteryState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "getParticipants",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "getParticipantsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "getPrizeDescription",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lotteries",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "prizeDescription",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "enum PrivacyLottery.LotteryState",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610c23908161001b8239f35b5f80fdfe60806040526004361015610011575f80fd5b5f3560e01c80631398e076146109885780633fd43098146108075780634a4a6b4f146107ea57806360b2a56a14610655578063c1e3bd3e14610598578063c522be2014610547578063d366b2f914610504578063f5f48998146104cb5763f8bdd72f1461007c575f80fd5b346104c75760403660031901126104c75760043567ffffffffffffffff81116104c757366023820112156104c75767ffffffffffffffff8160040135116104c7573660248260040135830101116104c7578060040135156104825742602435111561043d576001545f1981146104295760018101600155604051916020830183811067ffffffffffffffff82111761034a576040525f835260405160c0810181811067ffffffffffffffff82111761034a57604052338152604051936101506020601f19601f866004013501160186610a44565b60048301358086526024840160208701375f60208460040135870101526020820194855260243560408301525f606083015260808201525f60a0820152825f525f60205260405f209360018060a01b038251166001600160601b0360a01b8654161785555180519067ffffffffffffffff821161034a5781906101d66001880154610a0c565b601f81116103eb575b50602090601f831160011461037d575f92610372575b50508160011b915f199060031b1c19161760018501555b60408101516002850155600384016060820151600481101561035e5760ff801983541691161790556004840193608082015180519067ffffffffffffffff821161034a57600160401b821161034a57602090875483895580841061032f575b5001955f5260205f20955f5b82811061031257867f82e28ec32c4bb65ac4c0fa03213b48d486883c3e45264522bd04aee843532a2e8787600588019060a0600180821b03910151166001600160601b0360a01b825416179055608060405180923382526060602083015280600401356060830152806004013560248201848401375f838260040135840101526024356040830152601f8019916004013501168101030190a2005b81516001600160a01b031681890155602090910190600101610277565b61034490895f5284845f209182019101610c00565b5f61026b565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52602160045260245ffd5b015190505f806101f5565b9250600187015f5260205f20905f935b601f19841685106103d0576001945083601f198116106103b8575b505050811b01600185015561020c565b01515f1960f88460031b161c191690555f80806103a8565b8181015183556020948501946001909301929091019061038d565b61041990600189015f5260205f20601f850160051c8101916020861061041f575b601f0160051c0190610c00565b5f6101df565b909150819061040c565b634e487b7160e01b5f52601160045260245ffd5b60405162461bcd60e51b815260206004820152601e60248201527f446561646c696e65206d75737420626520696e207468652066757475726500006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f5072697a65206465736372697074696f6e2072657175697265640000000000006044820152606490fd5b5f80fd5b346104c75760203660031901126104c7576004356104ec6001548210610b53565b5f525f6020526020600460405f200154604051908152f35b346104c75760203660031901126104c7576004356105256001548210610b53565b5f525f602052602060ff600360405f200154166105456040518092610b46565bf35b346104c75760203660031901126104c7576004356105686001548210610b53565b5f525f602052610594610580600160405f2001610a66565b604051918291602083526020830190610b08565b0390f35b346104c7576020806003193601126104c757600435906001916105be6001548210610b53565b5f525f8152600460405f200191604051918281855491828152019081955f52825f20905f5b81811061063957505050836105f9910384610a44565b6040519281840190828552518091526040840194915f5b82811061061d5785870386f35b83516001600160a01b0316875295810195928101928401610610565b82546001600160a01b03168452928401929185019185016105e3565b346104c7576020806003193601126104c757600435906106786001548310610b53565b5f8281528082526040902080546001600160a01b03929190831633036107ad576003810180549360ff8516600481101561035e576106b69015610b98565b60048301948554958615610776575f194301924384116104295760405191878301944085524260408401528960608401528860808401523360601b60a08401526094835260c083019083821067ffffffffffffffff83111761034a577fa32be17495f4ca52a36e64b567f7ee15d108becc107da2b4fa1b755b50d86d049960039660059561074b946040525190200690610bd7565b905490851b1c169401846001600160601b0360a01b82541617905560ff1916179055604051908152a2005b60405162461bcd60e51b815260048101879052600f60248201526e4e6f207061727469636970616e747360881b6044820152606490fd5b60405162461bcd60e51b81526004810183905260156024820152744f6e6c792063726561746f722063616e206472617760581b6044820152606490fd5b346104c7575f3660031901126104c7576020600154604051908152f35b346104c7576020806003193601126104c75760043590600161082c6001548410610b53565b825f525f60205260405f209060039160ff600382015416600481101561035e576108569015610b98565b6002810154421015610943579160045f9301938454935b8481106108d85750505050600160401b81101561034a5761089391600182018155610bd7565b81549060031b9033821b9160018060a01b03901b19161790557f7076b6d580c0523456eb58b88d88dc6937af3562eaa19a4a16af7885694781286020604051338152a2005b6108e28187610bd7565b905490841b1c6001600160a01b031633146108fe57830161086d565b60405162461bcd60e51b815260048101839052601b60248201527f5061727469636970616e7420616c726561647920656e746572656400000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f4c6f747465727920646561646c696e65207061737365640000000000000000006044820152606490fd5b346104c75760203660031901126104c7576004355f525f60205260405f2060018060a01b0380825416906109be60018401610a66565b92610a03600282015492600560ff60038501541693015416916109f3604051968796875260a0602088015260a0870190610b08565b9360408601526060850190610b46565b60808301520390f35b90600182811c92168015610a3a575b6020831014610a2657565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610a1b565b90601f8019910116810190811067ffffffffffffffff82111761034a57604052565b9060405191825f8254610a7881610a0c565b908184526020946001916001811690815f14610ae65750600114610aa8575b505050610aa692500383610a44565b565b5f90815285812095935091905b818310610ace575050610aa693508201015f8080610a97565b85548884018501529485019487945091830191610ab5565b92505050610aa694925060ff191682840152151560051b8201015f8080610a97565b91908251928382525f5b848110610b32575050825f602080949584010152601f8019910116010190565b602081830181015184830182015201610b12565b90600482101561035e5752565b15610b5a57565b60405162461bcd60e51b8152602060048201526016602482015275131bdd1d195c9e48191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b15610b9f57565b60405162461bcd60e51b815260206004820152601060248201526f2637ba3a32b93c903737ba1037b832b760811b6044820152606490fd5b8054821015610bec575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b818110610c0b575050565b5f8155600101610c0056fea164736f6c6343000818000a";

type PrivacyLotteryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivacyLotteryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivacyLottery__factory extends ContractFactory {
  constructor(...args: PrivacyLotteryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrivacyLottery & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivacyLottery__factory {
    return super.connect(runner) as PrivacyLottery__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivacyLotteryInterface {
    return new Interface(_abi) as PrivacyLotteryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivacyLottery {
    return new Contract(address, _abi, runner) as unknown as PrivacyLottery;
  }
}
