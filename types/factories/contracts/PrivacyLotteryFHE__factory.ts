/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PrivacyLotteryFHE,
  PrivacyLotteryFHEInterface,
} from "../../contracts/PrivacyLotteryFHE";

const _abi = [
  {
    inputs: [],
    name: "HandlesAlreadySavedForRequestID",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidKMSSignatures",
    type: "error",
  },
  {
    inputs: [],
    name: "NoHandleFoundForRequestID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "DecryptionFulfilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "prizeDescription",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "LotteryCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "participant",
        type: "address",
      },
    ],
    name: "ParticipantEntered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "WinnerDrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "WinnerRevealed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_prizeDescription",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "createLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "cleartexts",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "proof",
        type: "bytes",
      },
    ],
    name: "decryptWinnerIndex",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        internalType: "euint32",
        name: "encryptedRandomSeed",
        type: "bytes32",
      },
    ],
    name: "drawWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "commitmentHash",
        type: "bytes32",
      },
    ],
    name: "enterLottery",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "getLotteryState",
    outputs: [
      {
        internalType: "enum PrivacyLotteryFHE.LotteryState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "getParticipantsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "getPrizeDescription",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "lotteries",
    outputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "prizeDescription",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "enum PrivacyLotteryFHE.LotteryState",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "euint32",
        name: "encryptedParticipantCount",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "encryptedRandomSeed",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "decryptedWinnerIndex",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lotteryCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "participantAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "participants",
    outputs: [
      {
        internalType: "bytes32",
        name: "commitmentHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "isRevealed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
    ],
    name: "requestWinnerDecryption",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lotteryId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
    ],
    name: "revealWinner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234610154575f6060610014610158565b828152826020820152826040820152015261002d610158565b606073687820221192c5b662b25367f70076a37bc79b6c9182815273848b0066793bcc60346da1f49049357399b8d59580602083015273a02cda4ca3a71d7c46997716f4283aa851c2881291826040820152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac938491015260018060a01b0319937f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970090858254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970190848254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970290838254161790557f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497039182541617905560405161194b908161018c8239f35b5f80fd5b60405190608082016001600160401b0381118382101761017757604052565b634e487b7160e01b5f52604160045260245ffdfe6080806040526004361015610012575f80fd5b5f905f3560e01c90816302e060c614611455575080631398e076146113ac5780633afb9e85146110ba5780633c35028a146110675780634a4a6b4f146110495780635d871edf14610d34578063aaf9f40414610c40578063b831f237146107f8578063c522be20146107a6578063d366b2f914610764578063da1f12ab14610747578063df7246a3146104da578063f5f48998146104a35763f8bdd72f146100b8575f80fd5b346104a05760403660031901126104a05760043567ffffffffffffffff811161049c573660238201121561049c5767ffffffffffffffff81600401351161049c5736602482600401358301011161049c5780600401351561045757426024351115610412576003549061012a826117e8565b6003556101356118aa565b61013d6118aa565b60405191610100830183811067ffffffffffffffff8211176103fe5760405233835261017136856004013560248701611669565b60208401526024356040840152856060840152608083015260a08201528360c08201528360e0820152828452836020526040842060018060a01b038251166bffffffffffffffffffffffff60a01b825416178155602082015180519067ffffffffffffffff82116103ea5781906101eb60018501546114ab565b601f811161039a575b50602090601f831160011461032c578892610321575b50508160011b915f199060031b1c19161760018201555b60408201516002820155600381016060830151600381101561030d57815460ff191660ff919091161790556080820151600482015560a080830151600583015560c08301516006909201805460e09094015163ffffffff60a01b921b919091166001600160a01b039092166001600160c01b0319909316929092171790557f82e28ec32c4bb65ac4c0fa03213b48d486883c3e45264522bd04aee843532a2e90608060405180923382526060602083015280600401356060830152806004013560248201848401376004013581810183018790526024356040830152601f01601f19168101030190a280f35b634e487b7160e01b87526021600452602487fd5b015190505f8061020a565b9250600184018852602088209088935b601f198416851061037f576001945083601f19811610610367575b505050811b016001820155610221565b01515f1960f88460031b161c191690555f8080610357565b8181015183556020948501946001909301929091019061033c565b90915060018401885260208820601f840160051c8101602085106103e3575b90849392915b601f830160051c820181106103d55750506101f4565b5f81558594506001016103bf565b50806103b9565b634e487b7160e01b87526041600452602487fd5b634e487b7160e01b5f52604160045260245ffd5b60405162461bcd60e51b815260206004820152601e60248201527f446561646c696e65206d75737420626520696e207468652066757475726500006044820152606490fd5b60405162461bcd60e51b815260206004820152601a60248201527f5072697a65206465736372697074696f6e2072657175697265640000000000006044820152606490fd5b5080fd5b80fd5b50346104a05760203660031901126104a05760406020916004356104ca60035482106116cd565b8152600283522054604051908152f35b50346104a0576104e936611653565b6104f660035483106116cd565b8183526020908382526040842090600382019160ff835416600381101561030d579061052660016006931461174d565b01805463ffffffff8160a01c168015610702578688526002865280604089205411156106c65761056090878952600287526040892061162a565b905460039190911b1c6001600160a01b03163303610690578587526001855260408720335f52855260405f20600181019360ff85541661065857604051878101913360601b83526034820152603481526105b9816114f7565b51902090540361061e57916002917f8a200a9381e7110d8d648c741104b392967fa6a0652131a728c38526bc0b123695949333906bffffffffffffffffffffffff60a01b1617905560ff1990600182825416179055825416179055604051338152a280f35b60405162461bcd60e51b8152600481018690526012602482015271125b9d985b1a590818dbdb5b5a5d1b595b9d60721b6044820152606490fd5b60405162461bcd60e51b815260048101889052601060248201526f105b1c9958591e481c995d99585b195960821b6044820152606490fd5b60405162461bcd60e51b815260048101869052600e60248201526d2737ba103a3432903bb4b73732b960911b6044820152606490fd5b60405162461bcd60e51b8152600481018790526014602482015273092dcecc2d8d2c840eed2dcdccae440d2dcc8caf60631b6044820152606490fd5b60405162461bcd60e51b815260048101879052601a60248201527f57696e6e657220696e646578206e6f74206465637279707465640000000000006044820152606490fd5b50346104a057806003193601126104a05760206040516127118152f35b50346104a05760203660031901126104a05760ff6003604060209360043561078e845482106116cd565b8152808552200154166107a4604051809261161d565bf35b50346104a05760203660031901126104a0576107e0600160406107f4936004356107d360035482106116cd565b8152806020522001611535565b6040519182916020835260208301906115f8565b0390f35b50346104a057600319906060368301126104a05760249167ffffffffffffffff6004358435828111610c3c576108329036906004016116af565b604435838111610b075761084a9036906004016116af565b908286526020926004845260408720548015610c06575f198101908111610bf3578752868452604087209560ff600388015416936003851015610be0576001809503610bac578289527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0180875260408a205415610b9a57838a5286526040808a2090518154808252918b52878b2090968791828a01918d5b8b868210610b8457505050506108fa92500386611513565b83519485870195868811610b7157604001809611610b5e5786918b8b604051938489519a878b019b8c818a8501610930926115d7565b8201908882015203868101865260400161094a9086611513565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649703546040516378542ead60e01b8152606060048201529788966001600160a01b0390921695879586949193916109a4906064870190611877565b908386830301908601526109b7916115f8565b908382030160448401526109ca916115f8565b03925af1908115610b53578891610b1d575b5015610b0b577f1af0453083661051f6e56e5c070792320652e612154bf9af8637bb1e7655b99d8780a280518101918382818501940312610af0575190848211610af0570181603f82011215610b075782810151938411610af4578360051b9060405194610a4c85840187611513565b8552604084860192820101928311610af057604001905b828210610ad0575050505063ffffffff610a8881610a808461178c565b511692611799565b5116938415610abe5750600691909101805463ffffffff60a01b19169390910660a01b63ffffffff60a01b169290921790915580f35b634e487b7160e01b8452601260045283fd5b815163ffffffff81168103610aec578152908301908301610a63565b8780fd5b8680fd5b86634e487b7160e01b5f5260416004525ffd5b8580fd5b60405163cf6c44e960e01b8152600490fd5b90508481813d8311610b4c575b610b348183611513565b81010312610aec57518015158103610aec575f6109dc565b503d610b2a565b6040513d8a823e3d90fd5b634e487b7160e01b8a5260116004528a8afd5b634e487b7160e01b8b5260116004528b8bfd5b835485528b9550909301929181019181016108e2565b60405163d66ca67560e01b8152600490fd5b60405162461bcd60e51b815260048101879052600d818c01526c496e76616c696420737461746560981b6044820152606490fd5b634e487b7160e01b895260216004528989fd5b634e487b7160e01b885260116004528888fd5b60405162461bcd60e51b815260048101869052600f818b01526e125b9d985b1a59081c995c5d595cdd608a1b6044820152606490fd5b8480fd5b50346104a05760403660031901126104a057600435602435610c6560035483106116cd565b81835282602052610c8360018060a01b036040852054163314611712565b8183528260205260408320906003820180549260ff8416600381101561030d57610cad90156117a9565b60028101544210610cf857610cd093836005600193015560ff191617905561180a565b507fb042a90651658833ced064b7e52c96f0dbcb36278e6dac9c37178e6612b9ed4e8280a280f35b60405162461bcd60e51b8152602060048201526014602482015273111958591b1a5b99481b9bdd081c995858da195960621b6044820152606490fd5b50346104a057610d4336611653565b610d5060035483106116cd565b8183526020838152604084209160ff600384015416600381101561103557610d7890156117a9565b6002830154421015610ff0578385526001825260408520335f52825260405f205415610da2578480f35b604051906040820182811067ffffffffffffffff8211176103fe57604052815260018282019186835285875281845260408720335f52845260405f2090518155019051151560ff801983541691161790558284526002815260408420805490600160401b821015610fdc5781610e1f91600160049401815561162a565b939080549460031b60018060a01b03958633831b921b191617905501915f8354917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701908481835416604460405180968193639cd07acb60e01b835260016004840152600460248401525af1908115610fd15785935f92610fa0575b50818515610f90575b15610f7d575b6064919254169388604051958694859363022f65e760e31b8552600485015260248401528160448401525af1908115610f72578591610f21575b5080610f11917f7076b6d580c0523456eb58b88d88dc6937af3562eaa19a4a16af788569478128945561180a565b50604051338152a25f8080808480f35b90508181813d8311610f6b575b610f388183611513565b81010312610f6757517f7076b6d580c0523456eb58b88d88dc6937af3562eaa19a4a16af788569478128610ee3565b5f80fd5b503d610f2e565b6040513d87823e3d90fd5b60649150610f896118aa565b9150610ea9565b9450610f9a6118aa565b94610ea3565b8481959293503d8311610fca575b610fb88183611513565b81010312610f6757849251905f610e9a565b503d610fae565b6040513d5f823e3d90fd5b634e487b7160e01b86526041600452602486fd5b60405162461bcd60e51b815260048101839052601760248201527f4c6f747465727920646561646c696e65207061737365640000000000000000006044820152606490fd5b634e487b7160e01b86526021600452602486fd5b50346104a057806003193601126104a0576020600354604051908152f35b50346104a05760403660031901126104a0576024359060043581526002602052604081209081548310156104a05760206110a1848461162a565b905460405160039290921b1c6001600160a01b03168152f35b5034610f6757602080600319360112610f6757600435906110de60035483106116cd565b815f525f815260018060a01b036110fc8160405f2054163314611712565b825f525f825260405f2060ff600382015416600381101561139857611124600180921461174d565b60405191611131836114f7565b600283526004858401916040368437600581015461114e8661178c565b52015461115a84611799565b527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0092835494807f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497005416803b15610f67575f6040518092637d6e912360e11b82528a60048301528183816111d1602482018a611877565b03925af18015610fd157611385575b5088907f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497025416803b1561049c57816040518092633263b83b60e01b82528960048301526060602483015281838161123a606482018a611877565b63b831f23760e01b604483015203925af1801561137a57611366575b508590527f878245876662ba28a480c5ea71726db859fb50222b0a3d7cbbc21cfa336faf0180875260408920546113545785895286526040882090519167ffffffffffffffff831161134057600160401b8311611340578154838355808410611319575b50908852858820885b8381106113085750505050506112d981546117e8565b9055600183018093116112f457835260049052604082205580f35b634e487b7160e01b84526011600452602484fd5b8251828201559187019184016112c3565b828a528484898c2092830192015b8281106113355750506112ba565b5f8155018590611327565b634e487b7160e01b89526041600452602489fd5b604051633f06d22b60e01b8152600490fd5b61136f906114e3565b610aec57875f611256565b6040513d84823e3d90fd5b6113909199506114e3565b5f975f6111e0565b634e487b7160e01b5f52602160045260245ffd5b34610f67576020366003190112610f67576004355f525f60205260405f2060018060a01b03808254169063ffffffff6113e760018501611535565b9360028101549260ff60038301541691600481015461143760066005840154930154946114276040519a8b9a610100908c528060208d01528b01906115f8565b9760408a0152606089019061161d565b608087015260a0860152811660c085015260a01c1660e08301520390f35b34610f67576040366003190112610f67576024356001600160a01b0381169190829003610f67576040916004355f526001602052825f20905f52602052815f2060ff600182549201541690825215156020820152f35b90600182811c921680156114d9575b60208310146114c557565b634e487b7160e01b5f52602260045260245ffd5b91607f16916114ba565b67ffffffffffffffff81116103fe57604052565b6060810190811067ffffffffffffffff8211176103fe57604052565b90601f8019910116810190811067ffffffffffffffff8211176103fe57604052565b9060405191825f8254611547816114ab565b908184526020946001916001811690815f146115b55750600114611577575b50505061157592500383611513565b565b5f90815285812095935091905b81831061159d57505061157593508201015f8080611566565b85548884018501529485019487945091830191611584565b9250505061157594925060ff191682840152151560051b8201015f8080611566565b5f5b8381106115e85750505f910152565b81810151838201526020016115d9565b90602091611611815180928185528580860191016115d7565b601f01601f1916010190565b9060038210156113985752565b805482101561163f575f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b6040906003190112610f67576004359060243590565b92919267ffffffffffffffff82116103fe5760405191611693601f8201601f191660200184611513565b829481845281830111610f67578281602093845f960137010152565b9080601f83011215610f67578160206116ca93359101611669565b90565b156116d457565b60405162461bcd60e51b8152602060048201526016602482015275131bdd1d195c9e48191bd95cc81b9bdd08195e1a5cdd60521b6044820152606490fd5b1561171957565b60405162461bcd60e51b815260206004820152600c60248201526b27b7363c9031b932b0ba37b960a11b6044820152606490fd5b1561175457565b60405162461bcd60e51b815260206004820152601060248201526f2bb4b73732b9103737ba10323930bbb760811b6044820152606490fd5b80511561163f5760200190565b80516001101561163f5760400190565b156117b057565b60405162461bcd60e51b815260206004820152601060248201526f2637ba3a32b93c903737ba1037b832b760811b6044820152606490fd5b5f1981146117f65760010190565b634e487b7160e01b5f52601160045260245ffd5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700546001600160a01b0316803b15610f67575f8091604460405180948193635ca4b5b160e11b83528760048401523060248401525af18015610fd15761186e575090565b6116ca906114e3565b9081518082526020808093019301915f5b828110611896575050505090565b835185529381019392810192600101611888565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f600480830182905260248301529091602091839160449183916001600160a01b03165af1908115610fd1575f9161190f575090565b90506020813d602011611936575b8161192a60209383611513565b81010312610f67575190565b3d915061191d56fea164736f6c6343000818000a";

type PrivacyLotteryFHEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivacyLotteryFHEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivacyLotteryFHE__factory extends ContractFactory {
  constructor(...args: PrivacyLotteryFHEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PrivacyLotteryFHE & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PrivacyLotteryFHE__factory {
    return super.connect(runner) as PrivacyLotteryFHE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivacyLotteryFHEInterface {
    return new Interface(_abi) as PrivacyLotteryFHEInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PrivacyLotteryFHE {
    return new Contract(address, _abi, runner) as unknown as PrivacyLotteryFHE;
  }
}
